@page "/clients/create"
@inject DatabaseContext DB
@inject NavigationManager NavigationManager
@attribute [Authorize]

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Client</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Client" OnValidSubmit="AddClient" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Client.Name" class="form-control" /> 
                <ValidationMessage For="() => Client.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="address" class="form-label">Address:</label> 
                <InputText id="address" @bind-Value="Client.Address" class="form-control" /> 
                <ValidationMessage For="() => Client.Address" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="contactname" class="form-label">ContactName:</label> 
                <InputText id="contactname" @bind-Value="Client.ContactName" class="form-control" /> 
                <ValidationMessage For="() => Client.ContactName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="contactnumber" class="form-label">Alternative ContactNumber:</label> 
                <InputText id="contactnumber" @bind-Value="Client.ContactNumber" class="form-control" /> 
                <ValidationMessage For="() => Client.ContactNumber" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="emailid" class="form-label">EmailId:</label> 
                <InputText id="emailid" @bind-Value="Client.EmailId" class="form-control" /> 
                <ValidationMessage For="() => Client.EmailId" class="text-danger" /> 
            </div>        
                
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/clients">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Client Client { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddClient()
    {
        // var authState = await _asp.GetAuthenticationStateAsync();

        Client.UpdatedAt = DateTime.Now;
        DB.Clients.Add(Client);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/clients");
    }
}
