@page "/employees/delete"
@inject DatabaseContext DB
@using Microsoft.AspNetCore.Authorization
@using Adwaith.Application.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@attribute [Authorize]


<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Employee</h4>
    <hr />
    @if (employee is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">EmployeeName</dt>
            <dd class="col-sm-10">@employee.EmployeeName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">MobileNumber</dt>
            <dd class="col-sm-10">@employee.MobileNumber</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BankName</dt>
            <dd class="col-sm-10">@employee.BankName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BankAccountNo</dt>
            <dd class="col-sm-10">@employee.BankAccountNo</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IFSC</dt>
            <dd class="col-sm-10">@employee.IFSC</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AccountName</dt>
            <dd class="col-sm-10">@employee.AccountName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">EmailId</dt>
            <dd class="col-sm-10">@employee.EmailId</dd>
        </dl>
        <EditForm method="post" Model="employee" OnValidSubmit="DeleteEmployee" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(employee is null)">Delete</button> |
            <a href="/employees">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Employee? employee;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        employee = await DB.Employees.FirstOrDefaultAsync(m => m.Id == Id);

        if (employee is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteEmployee()
    {
       
        employee.UpdatedAt = DateTime.Now;
        employee.IsRemoved = true;

        DB.Update(employee);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/employees");
    }
}
