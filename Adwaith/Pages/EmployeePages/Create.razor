@page "/employees/create"
@inject DatabaseContext DB
@using Microsoft.AspNetCore.Authorization
@using Adwaith.Application.Models
@inject NavigationManager NavigationManager
@attribute [Authorize]


<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Employee</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Employee" OnValidSubmit="AddEmployee" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="employeename" class="form-label">EmployeeName:</label> 
                <InputText id="employeename" @bind-Value="Employee.EmployeeName" class="form-control" /> 
                <ValidationMessage For="() => Employee.EmployeeName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="mobilenumber" class="form-label">MobileNumber:</label> 
                <InputText id="mobilenumber" @bind-Value="Employee.MobileNumber" class="form-control" /> 
                <ValidationMessage For="() => Employee.MobileNumber" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="bankname" class="form-label">BankName:</label> 
                <InputText id="bankname" @bind-Value="Employee.BankName" class="form-control" /> 
                <ValidationMessage For="() => Employee.BankName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="bankaccountno" class="form-label">BankAccountNo:</label> 
                <InputText id="bankaccountno" @bind-Value="Employee.BankAccountNo" class="form-control" /> 
                <ValidationMessage For="() => Employee.BankAccountNo" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="ifsc" class="form-label">IFSC:</label> 
                <InputText id="ifsc" @bind-Value="Employee.IFSC" class="form-control" /> 
                <ValidationMessage For="() => Employee.IFSC" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="accountname" class="form-label">AccountName:</label> 
                <InputText id="accountname" @bind-Value="Employee.AccountName" class="form-control" /> 
                <ValidationMessage For="() => Employee.AccountName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="emailid" class="form-label">EmailId:</label> 
                <InputText id="emailid" @bind-Value="Employee.EmailId" class="form-control" /> 
                <ValidationMessage For="() => Employee.EmailId" class="text-danger" /> 
            </div>        
                    
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/employees">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Employee Employee { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddEmployee()
    {
       

        
        Employee.UpdatedAt = DateTime.Now;
        DB.Employees.Add(Employee);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/employees");
    }
}
