@page "/projects/details"
@inject DatabaseContext DB
@using Adwaith.Application.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Project</h4>
    <hr />
    @if (project is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">ProjectName</dt>
            <dd class="col-sm-10">@project.ProjectName</dd>
            <dt class="col-sm-2">StartDate</dt>
            <dd class="col-sm-10">@project.StartDate</dd>
            <dt class="col-sm-2">ClientId</dt>
            <dd class="col-sm-10">@project.ClientId</dd>
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@project.Description</dd>
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@project.UpdatedBy</dd>
            <dt class="col-sm-2">UpdatedAt</dt>
            <dd class="col-sm-10">@project.UpdatedAt</dd>
            <dt class="col-sm-2">IsRemoved</dt>
            <dd class="col-sm-10">@project.IsRemoved</dd>
        </dl>
        <div>
            <a href="@($"/projects/edit?id={project.Id}")">Edit</a> |
            <a href="@($"/projects")">Back to List</a>
        </div>
    }
</div>

@code {
    Project? project;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        project = await DB.Projects.FirstOrDefaultAsync(m => m.Id == Id);

        if (project is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
